// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Product {
  id          String   @id @default(cuid())
  name        String
  price       Int      // цена в копейках (450 рублей = 45000)
  category    String   // women, men, unisex
  description String   @db.Text
  image       String?  @db.LongText  // Используем LONGTEXT для больших base64 изображений
  colors      String   @db.Text // JSON массив цветов
  sizes       String   @db.Text // JSON массив размеров
  material    String   @default("Хлопок 100%")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("products")
}

model Order {
  id           String   @id @default(cuid())
  customerName String
  email        String
  phone        String
  totalAmount  Int      // сумма в копейках
  status       String   @default("pending") // pending, processing, completed, cancelled
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Связь с товарами
  items OrderItem[]

  @@map("orders")
}

model OrderItem {
  id          String @id @default(cuid())
  orderId     String
  productId   String?  // делаем опциональным
  productName String
  quantity    Int
  size        String
  color       String
  price       Int    // цена за единицу в копейках

  // Связи - убираем обязательную связь с товаром
  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@index([orderId])
  @@map("order_items")
}
