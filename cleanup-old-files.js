const fs = require('fs');
const path = require('path');

// –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞–ø–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
const itemsToDelete = [
  // –°—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞
  'package.json',
  'package-lock.json',
  // –ü–∞–ø–∫–∏
  'server',
  'uploads',
  'assets',
  // –ö–æ–Ω—Ñ–∏–≥–∏
  'Procfile',
  'railway-deploy.js',
  'railway.env.example',
  'railway.simple.json',
  'ENV_SETUP.md',
  'FEATURES.md',
  'QUICK_DEPLOY.md',
  'RAILWAY_DEPLOY.md',
  'README.md'
];

console.log('üßπ –ù–∞—á–∏–Ω–∞—é –æ—á–∏—Å—Ç–∫—É —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤...\n');

itemsToDelete.forEach(item => {
  const itemPath = path.join(__dirname, item);
  
  try {
    if (fs.existsSync(itemPath)) {
      const stats = fs.statSync(itemPath);
      
      if (stats.isDirectory()) {
        fs.rmSync(itemPath, { recursive: true, force: true });
        console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞: ${item}`);
      } else {
        fs.unlinkSync(itemPath);
        console.log(`‚úÖ –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: ${item}`);
      }
    } else {
      console.log(`‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω: ${item}`);
    }
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ ${item}:`, error.message);
  }
});

console.log('\nüéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
console.log('üìÅ –û—Å—Ç–∞–ª—Å—è —Ç–æ–ª—å–∫–æ Next.js –ø—Ä–æ–µ–∫—Ç –≤ –ø–∞–ø–∫–µ rubolka-nextjs/');
console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
console.log('1. cd rubolka-nextjs');
console.log('2. npm install');
console.log('3. npm run dev');
console.log('\nüöÄ –î–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Railway –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: RAILWAY_DEPLOY_NEXTJS.md'); 